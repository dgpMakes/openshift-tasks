/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.30).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Destination;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2023-03-27T08:42:14.336Z")

@Validated
@Api(value = "destination", description = "the destination API")
@RequestMapping(value = "/v2")
public interface DestinationApi {

    @ApiOperation(value = "Add a new place to travel", nickname = "addDestination", notes = "", tags={ "destination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/destination",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addDestination(@ApiParam(value = "Destination to be created" ,required=true )  @Valid @RequestBody Destination body);


    @ApiOperation(value = "Delete a destination", nickname = "deleteDestination", notes = "", tags={ "destination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Destination not found") })
    @RequestMapping(value = "/destination/{destinationId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteDestination(@ApiParam(value = "Destination name to delete",required=true) @PathVariable("destinationId") Long destinationId,@ApiParam(value = "" ) @RequestHeader(value="api_key", required=false) String apiKey);


    @ApiOperation(value = "Update an existing destination", nickname = "updateDestination", notes = "", tags={ "destination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Destination not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/destination",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateDestination(@ApiParam(value = "Destination object to be updated" ,required=true )  @Valid @RequestBody Destination body);

}
